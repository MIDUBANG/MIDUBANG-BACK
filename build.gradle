buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.7'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'ewha.gsd'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// m1 MacOS
	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'

	//mariadb
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.4'

	// OAuth 2.0
	implementation "org.springframework.boot:spring-boot-starter-oauth2-client"

	//spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//WebClient
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.projectreactor:reactor-spring:1.0.1.RELEASE'

 	//querydsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"


}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/'querydsl'"


querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}


sourceSets {
	main.java.srcDir querydslDir
}



compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
